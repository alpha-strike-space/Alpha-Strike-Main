import{t as n,o as N,p as L,q as A,s as v,r as m}from"./api-CCz_OSt-.js";function k(e){var t,f;const l=document.getElementById("rollingAverageHeader");if(l&&e){let r=`Rolling ${e.charAt(0).toUpperCase()+e.slice(1)} Average`;const c=`header.rolling${e.charAt(0).toUpperCase()+e.slice(1)}`,u=localStorage.getItem("preferredLanguage")||"en";typeof n<"u"&&((t=n[c])!=null&&t[u])?r=n[c][u]:typeof n<"u"&&((f=n[c])!=null&&f.en)&&(r=n[c].en),l.textContent=r,console.log(`Rolling average header updated via updateRollingAverageHeaderText for timeRange: ${e}`)}else l||console.warn("updateRollingAverageHeaderText: rollingAverageHeader element not found."),e||console.warn("updateRollingAverageHeaderText: timeRange parameter is missing.")}async function C(e,l,t="month"){var i,p,g;const f="totals_",r={day:3e5,week:18e5,month:36e5},c=`${f}${t}_${e}`,u=r[t]||r.month,d=document.getElementById("data-container"),s=document.getElementById(l),h=s?s.querySelector("tbody"):null;if(!s||!h){console.error(`Table or table body not found for ID: ${l}.`),d&&(d.textContent="Error: UI elements missing.");return}if(s&&(s.style.display="none"),d){const a=localStorage.getItem("preferredLanguage")||"en",o=((i=n["loading.data"])==null?void 0:i[a])||"Loading data...";d.innerHTML=`<p data-translate="loading.data">${o}</p>`}try{const a=localStorage.getItem(c);if(a){const{timestamp:o,data:y}=JSON.parse(a);if(Date.now()-o<u){console.log(`Using cached data for metric: ${e}, timeRange: ${t}`);const $=y[e];T($,s,h,e,d,t);return}console.log(`Cache expired for metric: ${e}, timeRange: ${t}`),localStorage.removeItem(c)}}catch(a){console.error("Error reading from localStorage:",a)}try{let a;if(t==="day"?a=await N():t==="week"?a=await L():a=await A(),!a||typeof a!="object"||!a[e]){console.error(`No data returned or invalid structure for metric: ${e} in API response:`,a);const y=localStorage.getItem("preferredLanguage")||"en",$=((p=n["error.noData"])==null?void 0:p[y])||`No data available for metric: ${e}`;d&&(d.innerHTML=`<p data-translate="error.noData">${$}</p>`),s&&(s.style.display="none");return}try{localStorage.setItem(c,JSON.stringify({timestamp:Date.now(),data:a}))}catch(y){console.error("Error saving to localStorage:",y)}const o=a[e];T(o,s,h,e,d,t)}catch(a){console.error(`Error fetching data for metric: ${e}`,a);const o=localStorage.getItem("preferredLanguage")||"en",y=((g=n["error.loadFailed"])==null?void 0:g[o])||"Failed to load data.";d&&(d.innerHTML=`<p data-translate="error.loadFailed">${y}</p>`),s&&(s.style.display="none")}}function T(e,l,t,f,r,c){var d,s,h;const u=document.getElementById("rollingAverageHeader");if(u){let i=`Rolling ${c.charAt(0).toUpperCase()+c.slice(1)} Average`;const p=`header.rolling${c.charAt(0).toUpperCase()+c.slice(1)}`,g=localStorage.getItem("preferredLanguage")||"en";typeof n<"u"&&((d=n[p])!=null&&d[g])?i=n[p][g]:typeof n<"u"&&((s=n[p])!=null&&s.en)&&(i=n[p].en),u.textContent=i}r&&(r.textContent=""),l.style.display="table",t.innerHTML="",e&&Array.isArray(e)&&e.length>0?[...e].map(i=>{const p=document.createElement("tr");let g="",a="";if(f==="top_systems"){const o=i.solar_system_name||"UNKNOWN";g=`<span class="clickable-system" data-system="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,a=i.incident_count||i.kills}else if(f==="top_killers"){const o=i.name||"UNKNOWN";g=`<span class="clickable-name" data-name="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,a=i.kills}else if(f==="top_victims"){const o=i.name||"UNKNOWN";g=`<span class="clickable-name" data-name="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,a=i.losses}p.innerHTML=`
                <td>${g}</td>
                <td>${a}</td>
            `,t.appendChild(p)}):r&&(r.innerHTML=`<p data-translate="error.noData">${((h=n["error.noData"])==null?void 0:h[localStorage.getItem("preferredLanguage")||"en"])||"No data available for this metric."}</p>`,l.style.display="none"),I(l.id),typeof v=="function"&&v(localStorage.getItem("preferredLanguage")||"en")}function I(e){const l=document.getElementById(e);if(!l){console.error(`Table with ID ${e} not found.`);return}[...l.querySelectorAll(".clickable-name")].map(t=>{t.style.cursor="pointer",t.addEventListener("click",f=>{f.preventDefault();const r=t.dataset.name;r&&r!=="UNKNOWN"&&typeof m=="function"?m(r,"name"):typeof m!="function"&&console.error("navigateToSearch function is not defined. Make sure utils.js is loaded.")})}),[...l.querySelectorAll(".clickable-system")].map(t=>{t.style.cursor="pointer",t.addEventListener("click",f=>{f.preventDefault();const r=t.dataset.system;r&&r!=="UNKNOWN"&&typeof m=="function"?m(r,"system"):typeof m!="function"&&console.error("navigateToSearch function is not defined. Make sure utils.js is loaded.")})})}export{C as f,k as u};

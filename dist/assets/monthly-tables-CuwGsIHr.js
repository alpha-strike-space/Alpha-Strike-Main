import{t as g,n as S,o as v,p as T,s as N,q as m}from"./api-D2AYUuxa.js";async function D(a,c,e="month"){var s,i,d;const f="totals_",r={day:3e5,week:18e5,month:36e5},p=`${f}${e}_${a}`,h=r[e]||r.month,l=document.getElementById("data-container"),n=document.getElementById(c),y=n?n.querySelector("tbody"):null;if(!n||!y){console.error(`Table or table body not found for ID: ${c}.`),l&&(l.textContent="Error: UI elements missing.");return}if(n&&(n.style.display="none"),l){const t=localStorage.getItem("preferredLanguage")||"en",o=((s=g["loading.data"])==null?void 0:s[t])||"Loading data...";l.innerHTML=`<p data-translate="loading.data">${o}</p>`}I(e);try{const t=localStorage.getItem(p);if(t){const{timestamp:o,data:u}=JSON.parse(t);if(Date.now()-o<h){console.log(`Using cached data for metric: ${a}, timeRange: ${e}`);const $=u[a];L($,n,y,a,l,e);return}console.log(`Cache expired for metric: ${a}, timeRange: ${e}`),localStorage.removeItem(p)}}catch(t){console.error("Error reading from localStorage:",t)}try{let t;if(e==="day"?t=await S():e==="week"?t=await v():t=await T(),!t||typeof t!="object"||!t[a]){console.error(`No data returned or invalid structure for metric: ${a} in API response:`,t);const u=localStorage.getItem("preferredLanguage")||"en",$=((i=g["error.noData"])==null?void 0:i[u])||`No data available for metric: ${a}`;l&&(l.innerHTML=`<p data-translate="error.noData">${$}</p>`),n&&(n.style.display="none");return}try{localStorage.setItem(p,JSON.stringify({timestamp:Date.now(),data:t}))}catch(u){console.error("Error saving to localStorage:",u)}const o=t[a];L(o,n,y,a,l,e)}catch(t){console.error(`Error fetching data for metric: ${a}`,t);const o=localStorage.getItem("preferredLanguage")||"en",u=((d=g["error.loadFailed"])==null?void 0:d[o])||"Failed to load data.";l&&(l.innerHTML=`<p data-translate="error.loadFailed">${u}</p>`),n&&(n.style.display="none")}}function L(a,c,e,f,r,p){var l,n,y;const h=document.getElementById("rollingAverageHeader");if(h){let s=`Rolling ${p.charAt(0).toUpperCase()+p.slice(1)} Average`;const i=`header.rolling${p.charAt(0).toUpperCase()+p.slice(1)}`,d=localStorage.getItem("preferredLanguage")||"en";(l=g[i])!=null&&l[d]?s=g[i][d]:(n=g[i])!=null&&n.en&&(s=g[i].en),h.textContent=s}r&&(r.textContent=""),c.style.display="table",e.innerHTML="",a&&Array.isArray(a)&&a.length>0?[...a].map(s=>{const i=document.createElement("tr");let d="",t="";if(f==="top_systems"){const o=s.solar_system_name||"UNKNOWN";d=`<span class="clickable-system" data-system="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,t=s.incident_count||s.kills}else if(f==="top_killers"){const o=s.name||"UNKNOWN";d=`<span class="clickable-name" data-name="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,t=s.kills}else if(f==="top_victims"){const o=s.name||"UNKNOWN";d=`<span class="clickable-name" data-name="${o}" title="Click to search for ${o}">${o}<i class="fa-sharp fa-solid fa-arrow-up-right-from-square"></i></span>`,t=s.losses}i.innerHTML=`
                <td>${d}</td>
                <td>${t}</td>
            `,e.appendChild(i)}):r&&(r.innerHTML=`<p data-translate="error.noData">${((y=g["error.noData"])==null?void 0:y[localStorage.getItem("preferredLanguage")||"en"])||"No data available for this metric."}</p>`,c.style.display="none"),k(c.id),typeof N=="function"&&N(localStorage.getItem("preferredLanguage")||"en")}function k(a){const c=document.getElementById(a);if(!c){console.error(`Table with ID ${a} not found.`);return}[...c.querySelectorAll(".clickable-name")].map(e=>{e.style.cursor="pointer",e.addEventListener("click",f=>{f.preventDefault();const r=e.dataset.name;r&&r!=="UNKNOWN"&&typeof m=="function"?m(r,"name"):typeof m!="function"&&console.error("navigateToSearch function is not defined. Make sure utils.js is loaded.")})}),[...c.querySelectorAll(".clickable-system")].map(e=>{e.style.cursor="pointer",e.addEventListener("click",f=>{f.preventDefault();const r=e.dataset.system;r&&r!=="UNKNOWN"&&typeof m=="function"?m(r,"system"):typeof m!="function"&&console.error("navigateToSearch function is not defined. Make sure utils.js is loaded.")})})}function I(a){[...document.querySelectorAll(".time-range-btn")].map(e=>{e.dataset.timeRange===a?e.classList.add("active"):e.classList.remove("active")})}export{D as f};
